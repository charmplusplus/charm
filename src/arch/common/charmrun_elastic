#!/bin/bash

is_restart=false

original_args=("$@")

# Default TMPDIR based on OS
if [[ "$(uname)" == "Darwin" ]]; then
    TMPDIR="/tmp"
else
    TMPDIR="/dev/shm"
fi

# Pre-parse to check for +shrinkexpand_basedir
for ((i=0; i<${#original_args[@]}; ++i)); do
    if [[ "${original_args[i]}" == "+shrinkexpand_basedir" ]]; then
        TMPDIR="${original_args[i+1]}"
        echo "Charmrun> Using custom base directory: $TMPDIR"
        break
    fi
done

pes_file="$TMPDIR/numRestartProcs.txt"

time {
while true; do
    args=()
    pes_args=""
    restart_arg=""

    temp_args=("${original_args[@]}")
    i=0
    while [ $i -lt ${#temp_args[@]} ]; do
        arg="${temp_args[$i]}"
        case "$arg" in
        +p|++p)
        i=$((i+1))
        pes_arg="$arg ${temp_args[$i]}"
        ;;
        +p[0-9]*)
        pes_arg="$arg"
        ;;
        ++p[0-9]*)
        pes_arg="$arg"
        ;;
        +shrinkexpand_basedir)
        # Skip this and its argument - already parsed at script start
        i=$((i+1))
        ;;
        *)
        args+=("$arg")
        ;;
        esac
        i=$((i+1))
    done

    # 2. Check the flag. If it's a restart, prepare the extra argument.
    if [ "$is_restart" = true ]; then
        restart_arg="+restart $TMPDIR +shrinkexpand_basedir $TMPDIR"
        if [ -f "$pes_file" ]; then
            num_pes=$(cat "$pes_file")
            echo "Charm> Reading pes $num_pes from $pes_file"
            pes_arg="+p $num_pes"
        fi
    fi

    # Pass all script arguments ("$@") to the executable
    "$(dirname "$0")/charmrun" $pes_arg "${args[@]}" $restart_arg

    EXIT_CODE=$?

    if [ "$EXIT_CODE" -eq 100 ]; then
        is_restart=true
        echo "Restart signal (code 100) received. Looping again."
        echo "----------------------------------------"
    else
        echo "Final exit signal (code $EXIT_CODE) received. Exiting loop."
        break
    fi
done
}

echo "Control loop finished."