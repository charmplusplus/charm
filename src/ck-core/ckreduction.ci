module CkReduction {
  
//Group object creation support:
  message CkGroupCallbackMsg;
  group [migratable] CkGroupInitCallback {
  	entry CkGroupInitCallback(void);
	entry void callMeBack(CkGroupCallbackMsg *);
  };
  group [migratable] CkGroupReadyCallback {
  	entry CkGroupReadyCallback(void);
	entry void callMeBack(CkGroupCallbackMsg *);
  };
  
  message CkReductionMsg;
  message CkReductionNumberMsg;
  message CkReductionInactiveMsg;
  
  group [migratable] CkReductionMgr : CkGroupInitCallback {
	entry CkReductionMgr();

	entry [expedited] void RecvMsg(CkReductionMsg *);
	//Sent down the reduction tree (used by barren PEs)
	entry  void ReductionStarting(CkReductionNumberMsg *);
	//Sent to root of the reduction tree with late migrant data
	entry  void LateMigrantMsg(CkReductionMsg *);
	//A late migrating contributor will never contribute
	entry  void MigrantDied(CkReductionNumberMsg *);

	entry [expedited] void Barrier_RecvMsg(CkReductionMsg *);

	entry void contributeViaMessage(CkReductionMsg *m);
  entry void AddToInactiveList(CkReductionInactiveMsg *m);
  };

  nodegroup CkNodeReductionMgr : IrrGroup {
	entry CkNodeReductionMgr(void);

	//Sent up the reduction tree with reduced data
	entry [expedited] void RecvMsg(CkReductionMsg *);
  };

  

};
