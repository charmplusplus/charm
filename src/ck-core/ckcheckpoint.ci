module CkCheckpoint {
  readonly CkGroupID _sysChkptWriteMgr;
  readonly CkGroupID _sysChkptMgr;
  extern module CkCheckpointStatus;
  nodegroup [migratable] CkCheckpointWriteMgr {
    entry CkCheckpointWriteMgr(void);
    entry [exclusive] void Checkpoint(char dirname[strlen(dirname) + 1], CkCallback cb,
                          bool requestStatus, int writersPerNode);
    entry [exclusive] void RescaleCheckpoint(char dirname[strlen(dirname) + 1], CkCallback cb,
                          std::vector<char> avail, bool requestStatus, int writersPerNode);
    entry [exclusive] void FinishedCheckpoint(void);
  };
  group [migratable] CkCheckpointMgr {
	entry CkCheckpointMgr(void);
	entry void Checkpoint(char dirname[strlen(dirname)+1],CkCallback cb, bool requestStatus);
	entry [reductiontarget] void SendRestartCB(void);
  };
  mainchare CkCheckpointInit {
    entry CkCheckpointInit(CkArgMsg *m);
  };
};
